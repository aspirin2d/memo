// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://github.com/sleep2death/memo-go/issues",
            "email": "aspirin2d@outlook.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/m/:session": {
            "get": {
                "description": "get all memories in this session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "memories"
                ],
                "summary": "get all memories",
                "parameters": [
                    {
                        "type": "string",
                        "description": "memory belonging to which session",
                        "name": "session",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "pagination offset id",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 5,
                        "description": "pagination limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/memo.RetrieveMemoriesResponse"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/memo.APIError"
                        }
                    }
                }
            }
        },
        "/m/:session/add": {
            "put": {
                "description": "add one or more memories to the session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "memories"
                ],
                "summary": "add memories",
                "parameters": [
                    {
                        "type": "string",
                        "description": "memory belonging to which session",
                        "name": "session",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the memory info",
                        "name": "memory",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/memo.AddMemoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/memo.AddMemoryResponse"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/memo.APIError"
                        }
                    }
                }
            }
        },
        "/m/:session/search": {
            "get": {
                "description": "search memory by similarity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "memories"
                ],
                "summary": "search memory by similarity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "memory belonging to which session",
                        "name": "session",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "query object",
                        "name": "query",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/memo.SearchMemoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/memo.RetrieveMemoriesResponse"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/memo.APIError"
                        }
                    }
                }
            }
        },
        "/s": {
            "get": {
                "description": "list all sessions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sessions"
                ],
                "summary": "get all sessions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pagination offset id",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "pagination limit, default is 5",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/memo.Session"
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/memo.APIError"
                        }
                    }
                }
            }
        },
        "/s/:id": {
            "get": {
                "description": "get one sessions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sessions"
                ],
                "summary": "get one session by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the session to get",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/memo.Session"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/memo.APIError"
                        }
                    }
                }
            }
        },
        "/s/:id/del": {
            "delete": {
                "description": "remove one sessions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sessions"
                ],
                "summary": "remove one session",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the session to delete",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/memo.OK"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/memo.APIError"
                        }
                    }
                }
            }
        },
        "/s/add": {
            "put": {
                "description": "add a sessions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sessions"
                ],
                "summary": "create a session",
                "parameters": [
                    {
                        "description": "the session to be created",
                        "name": "session",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/memo.Session"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mongo.InsertOneResult"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/memo.APIError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "memo.APIError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "message": {
                    "type": "string",
                    "example": "status bad request"
                }
            }
        },
        "memo.AddMemoryRequest": {
            "type": "object",
            "properties": {
                "memories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/memo.Memory"
                    }
                }
            }
        },
        "memo.AddMemoryResponse": {
            "type": "object",
            "properties": {
                "ids": {
                    "description": "inserted memory id in qdrant",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "memo.Memory": {
            "type": "object",
            "properties": {
                "embedding": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "id": {
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/memo.MemoryMetadata"
                }
            }
        },
        "memo.MemoryMetadata": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                }
            }
        },
        "memo.OK": {
            "type": "object",
            "properties": {
                "ok": {
                    "type": "boolean"
                }
            }
        },
        "memo.RetrieveMemoriesResponse": {
            "type": "object",
            "properties": {
                "memories": {
                    "description": "inserted memory id in qdrant",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/memo.Memory"
                    }
                },
                "next_offset": {
                    "type": "string"
                }
            }
        },
        "memo.SearchMemoryRequest": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer",
                    "default": 5
                },
                "query": {
                    "type": "string"
                }
            }
        },
        "memo.Session": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "created_at": {
                    "description": "auto-generated created time",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "mongo.InsertOneResult": {
            "type": "object",
            "properties": {
                "insertedID": {
                    "description": "The _id of the inserted document. A value generated by the driver will be of type primitive.ObjectID."
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.0.1",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Swagger Memo API",
	Description:      "This is a server for memo-services.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
