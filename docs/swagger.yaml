basePath: /api/v1
definitions:
  memo.APIError:
    properties:
      code:
        example: 400
        type: integer
      message:
        example: status bad request
        type: string
    type: object
  memo.AddMemoryRequest:
    properties:
      memories:
        items:
          $ref: '#/definitions/memo.Memory'
        type: array
    type: object
  memo.AddMemoryResponse:
    properties:
      ids:
        description: inserted memory id in qdrant
        items:
          type: string
        type: array
    type: object
  memo.Memory:
    properties:
      embedding:
        items:
          type: number
        type: array
      id:
        type: string
      metadata:
        $ref: '#/definitions/memo.MemoryMetadata'
    type: object
  memo.MemoryMetadata:
    properties:
      content:
        type: string
    type: object
  memo.OK:
    properties:
      ok:
        type: boolean
    type: object
  memo.RetrieveMemoriesResponse:
    properties:
      memories:
        description: inserted memory id in qdrant
        items:
          $ref: '#/definitions/memo.Memory'
        type: array
      next_offset:
        type: string
    type: object
  memo.SearchMemoryRequest:
    properties:
      limit:
        default: 5
        type: integer
      query:
        type: string
    type: object
  memo.Session:
    properties:
      _id:
        type: string
      created_at:
        description: auto-generated created time
        type: integer
      name:
        type: string
      tags:
        items:
          type: string
        type: array
    type: object
  mongo.InsertOneResult:
    properties:
      insertedID:
        description: The _id of the inserted document. A value generated by the driver
          will be of type primitive.ObjectID.
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact:
    email: aspirin2d@outlook.com
    name: API Support
    url: http://github.com/sleep2death/memo-go/issues
  description: This is a server for memo-services.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Memo API
  version: 0.0.1
paths:
  /m/:session:
    get:
      consumes:
      - application/json
      description: get all memories in this session
      parameters:
      - description: memory belonging to which session
        in: path
        name: session
        required: true
        type: string
      - description: pagination offset id
        in: query
        name: offset
        type: string
      - default: 5
        description: pagination limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/memo.RetrieveMemoriesResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/memo.APIError'
      summary: get all memories
      tags:
      - memories
  /m/:session/add:
    put:
      consumes:
      - application/json
      description: add one or more memories to the session
      parameters:
      - description: memory belonging to which session
        in: path
        name: session
        required: true
        type: string
      - description: the memory info
        in: body
        name: memory
        required: true
        schema:
          $ref: '#/definitions/memo.AddMemoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/memo.AddMemoryResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/memo.APIError'
      summary: add memories
      tags:
      - memories
  /m/:session/search:
    get:
      consumes:
      - application/json
      description: search memory by similarity
      parameters:
      - description: memory belonging to which session
        in: path
        name: session
        required: true
        type: string
      - description: query object
        in: body
        name: query
        required: true
        schema:
          $ref: '#/definitions/memo.SearchMemoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/memo.RetrieveMemoriesResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/memo.APIError'
      summary: search memory by similarity
      tags:
      - memories
  /s:
    get:
      description: list all sessions
      parameters:
      - description: pagination offset id
        in: query
        name: offset
        type: string
      - description: pagination limit, default is 5
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/memo.Session'
            type: array
        default:
          description: ""
          schema:
            $ref: '#/definitions/memo.APIError'
      summary: get all sessions
      tags:
      - sessions
  /s/:id:
    get:
      consumes:
      - application/json
      description: get one sessions
      parameters:
      - description: the session to get
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/memo.Session'
        default:
          description: ""
          schema:
            $ref: '#/definitions/memo.APIError'
      summary: get one session by id
      tags:
      - sessions
  /s/:id/del:
    delete:
      consumes:
      - application/json
      description: remove one sessions
      parameters:
      - description: the session to delete
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/memo.OK'
        default:
          description: ""
          schema:
            $ref: '#/definitions/memo.APIError'
      summary: remove one session
      tags:
      - sessions
  /s/add:
    put:
      consumes:
      - application/json
      description: add a sessions
      parameters:
      - description: the session to be created
        in: body
        name: session
        required: true
        schema:
          $ref: '#/definitions/memo.Session'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/mongo.InsertOneResult'
        default:
          description: ""
          schema:
            $ref: '#/definitions/memo.APIError'
      summary: create a session
      tags:
      - sessions
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
